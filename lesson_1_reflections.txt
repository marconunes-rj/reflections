Como a visualização de um diff entre duas versões de um arquivo ajuda você a ver o bug que foi introduzido?

    através da visualização das linhas que foram alteradas.

Como ter fácil acesso a todo o histórico de um arquivo pode torná-lo um programador mais eficiente no longo prazo?

    Possibilita a busca por alterações nos arquivos

Na sua opinião, quais são os prós e contras de escolher manualmente quando criar um commit, 
como ocorre no Git, v. o salvamento automático de versões, como no Google Docs?

    Permite que seja feito um maior controle sobre as alterações realizadas.

Por que você acha que alguns sistemas de controle de versão, como o Git, permitem salvar vários arquivos em um commit, 
enquanto outros, como o Google Docs, tratam cada arquivo separadamente?

    Porque o Git foi criado preferencialmente para controlar projetos e não somente um único arquivo.

Como usar os comandos git log e git diff para visualizar o histórico dos arquivos?

    git log para visualizar os commits e git diff utilizado para visualizar as diferenças entre dois commits.

De que modo o controle de versão pode dar a você mais segurança para fazer alterações que podem danificar algo?

    Permitindo que sejam restauradas versões anteriores e depois permitindo que façamos a comparação com a última versão.
	
Agora que você já configurou a sua área de trabalho, você quer usar o Git para quê?

	Para controlar as versões dos meus sistemas.
	
